// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterClientResponseAuthResponseStatus int32

const (
	RegisterClientResponse_OK         RegisterClientResponseAuthResponseStatus = 0
	RegisterClientResponse_DISALLOWED RegisterClientResponseAuthResponseStatus = 1
)

var RegisterClientResponseAuthResponseStatus_name = map[int32]string{
	0: "OK",
	1: "DISALLOWED",
}
var RegisterClientResponseAuthResponseStatus_value = map[string]int32{
	"OK":         0,
	"DISALLOWED": 1,
}

func (x RegisterClientResponseAuthResponseStatus) Enum() *RegisterClientResponseAuthResponseStatus {
	p := new(RegisterClientResponseAuthResponseStatus)
	*p = x
	return p
}
func (x RegisterClientResponseAuthResponseStatus) String() string {
	return proto.EnumName(RegisterClientResponseAuthResponseStatus_name, int32(x))
}
func (x *RegisterClientResponseAuthResponseStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegisterClientResponseAuthResponseStatus_value, data, "RegisterClientResponseAuthResponseStatus")
	if err != nil {
		return err
	}
	*x = RegisterClientResponseAuthResponseStatus(value)
	return nil
}
func (RegisterClientResponseAuthResponseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{1, 0}
}

type ChatMessageResponseMessageStat int32

const (
	ChatMessageResponse_OK  ChatMessageResponseMessageStat = 0
	ChatMessageResponse_ERR ChatMessageResponseMessageStat = 1
)

var ChatMessageResponseMessageStat_name = map[int32]string{
	0: "OK",
	1: "ERR",
}
var ChatMessageResponseMessageStat_value = map[string]int32{
	"OK":  0,
	"ERR": 1,
}

func (x ChatMessageResponseMessageStat) Enum() *ChatMessageResponseMessageStat {
	p := new(ChatMessageResponseMessageStat)
	*p = x
	return p
}
func (x ChatMessageResponseMessageStat) String() string {
	return proto.EnumName(ChatMessageResponseMessageStat_name, int32(x))
}
func (x *ChatMessageResponseMessageStat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChatMessageResponseMessageStat_value, data, "ChatMessageResponseMessageStat")
	if err != nil {
		return err
	}
	*x = ChatMessageResponseMessageStat(value)
	return nil
}
func (ChatMessageResponseMessageStat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{4, 0}
}

type ExitResponseExitStatus int32

const (
	ExitResponse_PERMITTED     ExitResponseExitStatus = 0
	ExitResponse_NOT_PERMITTED ExitResponseExitStatus = 1
)

var ExitResponseExitStatus_name = map[int32]string{
	0: "PERMITTED",
	1: "NOT_PERMITTED",
}
var ExitResponseExitStatus_value = map[string]int32{
	"PERMITTED":     0,
	"NOT_PERMITTED": 1,
}

func (x ExitResponseExitStatus) Enum() *ExitResponseExitStatus {
	p := new(ExitResponseExitStatus)
	*p = x
	return p
}
func (x ExitResponseExitStatus) String() string {
	return proto.EnumName(ExitResponseExitStatus_name, int32(x))
}
func (x *ExitResponseExitStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExitResponseExitStatus_value, data, "ExitResponseExitStatus")
	if err != nil {
		return err
	}
	*x = ExitResponseExitStatus(value)
	return nil
}
func (ExitResponseExitStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{8, 0}
}

type RegisterChatRoomResponseRegistrationStatus int32

const (
	RegisterChatRoomResponse_OK     RegisterChatRoomResponseRegistrationStatus = 0
	RegisterChatRoomResponse_EXISTS RegisterChatRoomResponseRegistrationStatus = 1
)

var RegisterChatRoomResponseRegistrationStatus_name = map[int32]string{
	0: "OK",
	1: "EXISTS",
}
var RegisterChatRoomResponseRegistrationStatus_value = map[string]int32{
	"OK":     0,
	"EXISTS": 1,
}

func (x RegisterChatRoomResponseRegistrationStatus) Enum() *RegisterChatRoomResponseRegistrationStatus {
	p := new(RegisterChatRoomResponseRegistrationStatus)
	*p = x
	return p
}
func (x RegisterChatRoomResponseRegistrationStatus) String() string {
	return proto.EnumName(RegisterChatRoomResponseRegistrationStatus_name, int32(x))
}
func (x *RegisterChatRoomResponseRegistrationStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegisterChatRoomResponseRegistrationStatus_value, data, "RegisterChatRoomResponseRegistrationStatus")
	if err != nil {
		return err
	}
	*x = RegisterChatRoomResponseRegistrationStatus(value)
	return nil
}
func (RegisterChatRoomResponseRegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{10, 0}
}

// username
// chat room id
type RegisterClient struct {
	Username             *string  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	RoomId               *string  `protobuf:"bytes,2,req,name=roomId" json:"roomId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterClient) Reset()         { *m = RegisterClient{} }
func (m *RegisterClient) String() string { return proto.CompactTextString(m) }
func (*RegisterClient) ProtoMessage()    {}
func (*RegisterClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{0}
}
func (m *RegisterClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClient.Unmarshal(m, b)
}
func (m *RegisterClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClient.Marshal(b, m, deterministic)
}
func (dst *RegisterClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClient.Merge(dst, src)
}
func (m *RegisterClient) XXX_Size() int {
	return xxx_messageInfo_RegisterClient.Size(m)
}
func (m *RegisterClient) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClient.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClient proto.InternalMessageInfo

func (m *RegisterClient) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *RegisterClient) GetRoomId() string {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return ""
}

// response :
// chat authentication response
// (optional) current users in room
// (maybe) - all messages so far in given chat room
type RegisterClientResponse struct {
	Status               *RegisterClientResponseAuthResponseStatus `protobuf:"varint,1,req,name=status,enum=chat.RegisterClientResponseAuthResponseStatus" json:"status,omitempty"`
	Users                []*RoomUserEntity                         `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *RegisterClientResponse) Reset()         { *m = RegisterClientResponse{} }
func (m *RegisterClientResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterClientResponse) ProtoMessage()    {}
func (*RegisterClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{1}
}
func (m *RegisterClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterClientResponse.Unmarshal(m, b)
}
func (m *RegisterClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterClientResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterClientResponse.Merge(dst, src)
}
func (m *RegisterClientResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterClientResponse.Size(m)
}
func (m *RegisterClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterClientResponse proto.InternalMessageInfo

func (m *RegisterClientResponse) GetStatus() RegisterClientResponseAuthResponseStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return RegisterClientResponse_OK
}

func (m *RegisterClientResponse) GetUsers() []*RoomUserEntity {
	if m != nil {
		return m.Users
	}
	return nil
}

// user entity for registration
// maybe add custom user features in future?
type RoomUserEntity struct {
	Username             *string  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomUserEntity) Reset()         { *m = RoomUserEntity{} }
func (m *RoomUserEntity) String() string { return proto.CompactTextString(m) }
func (*RoomUserEntity) ProtoMessage()    {}
func (*RoomUserEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{2}
}
func (m *RoomUserEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomUserEntity.Unmarshal(m, b)
}
func (m *RoomUserEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomUserEntity.Marshal(b, m, deterministic)
}
func (dst *RoomUserEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomUserEntity.Merge(dst, src)
}
func (m *RoomUserEntity) XXX_Size() int {
	return xxx_messageInfo_RoomUserEntity.Size(m)
}
func (m *RoomUserEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomUserEntity.DiscardUnknown(m)
}

var xxx_messageInfo_RoomUserEntity proto.InternalMessageInfo

func (m *RoomUserEntity) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

// chat payload
// username
// timestamp
type ChatMessage struct {
	Username             *string  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	Payload              *string  `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
	Time                 *string  `protobuf:"bytes,3,req,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{3}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (dst *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(dst, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ChatMessage) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func (m *ChatMessage) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

// Message Response
type ChatMessageResponse struct {
	Status               *ChatMessageResponseMessageStat `protobuf:"varint,1,req,name=status,enum=chat.ChatMessageResponseMessageStat" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ChatMessageResponse) Reset()         { *m = ChatMessageResponse{} }
func (m *ChatMessageResponse) String() string { return proto.CompactTextString(m) }
func (*ChatMessageResponse) ProtoMessage()    {}
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{4}
}
func (m *ChatMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageResponse.Unmarshal(m, b)
}
func (m *ChatMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageResponse.Marshal(b, m, deterministic)
}
func (dst *ChatMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageResponse.Merge(dst, src)
}
func (m *ChatMessageResponse) XXX_Size() int {
	return xxx_messageInfo_ChatMessageResponse.Size(m)
}
func (m *ChatMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageResponse proto.InternalMessageInfo

func (m *ChatMessageResponse) GetStatus() ChatMessageResponseMessageStat {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ChatMessageResponse_OK
}

// for pushing chat updates later
type MessageUpdateReq struct {
	Username             *string  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageUpdateReq) Reset()         { *m = MessageUpdateReq{} }
func (m *MessageUpdateReq) String() string { return proto.CompactTextString(m) }
func (*MessageUpdateReq) ProtoMessage()    {}
func (*MessageUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{5}
}
func (m *MessageUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageUpdateReq.Unmarshal(m, b)
}
func (m *MessageUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageUpdateReq.Marshal(b, m, deterministic)
}
func (dst *MessageUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageUpdateReq.Merge(dst, src)
}
func (m *MessageUpdateReq) XXX_Size() int {
	return xxx_messageInfo_MessageUpdateReq.Size(m)
}
func (m *MessageUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageUpdateReq proto.InternalMessageInfo

func (m *MessageUpdateReq) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type UpdateChatMessages struct {
	Messages             *ChatMessage `protobuf:"bytes,1,req,name=messages" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateChatMessages) Reset()         { *m = UpdateChatMessages{} }
func (m *UpdateChatMessages) String() string { return proto.CompactTextString(m) }
func (*UpdateChatMessages) ProtoMessage()    {}
func (*UpdateChatMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{6}
}
func (m *UpdateChatMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateChatMessages.Unmarshal(m, b)
}
func (m *UpdateChatMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateChatMessages.Marshal(b, m, deterministic)
}
func (dst *UpdateChatMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateChatMessages.Merge(dst, src)
}
func (m *UpdateChatMessages) XXX_Size() int {
	return xxx_messageInfo_UpdateChatMessages.Size(m)
}
func (m *UpdateChatMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateChatMessages.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateChatMessages proto.InternalMessageInfo

func (m *UpdateChatMessages) GetMessages() *ChatMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

type ExitRequest struct {
	Username             *string  `protobuf:"bytes,1,req,name=username" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExitRequest) Reset()         { *m = ExitRequest{} }
func (m *ExitRequest) String() string { return proto.CompactTextString(m) }
func (*ExitRequest) ProtoMessage()    {}
func (*ExitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{7}
}
func (m *ExitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitRequest.Unmarshal(m, b)
}
func (m *ExitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitRequest.Marshal(b, m, deterministic)
}
func (dst *ExitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitRequest.Merge(dst, src)
}
func (m *ExitRequest) XXX_Size() int {
	return xxx_messageInfo_ExitRequest.Size(m)
}
func (m *ExitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExitRequest proto.InternalMessageInfo

func (m *ExitRequest) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type ExitResponse struct {
	Exitstatus           *ExitResponseExitStatus `protobuf:"varint,1,req,name=exitstatus,enum=chat.ExitResponseExitStatus" json:"exitstatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ExitResponse) Reset()         { *m = ExitResponse{} }
func (m *ExitResponse) String() string { return proto.CompactTextString(m) }
func (*ExitResponse) ProtoMessage()    {}
func (*ExitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{8}
}
func (m *ExitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitResponse.Unmarshal(m, b)
}
func (m *ExitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitResponse.Marshal(b, m, deterministic)
}
func (dst *ExitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitResponse.Merge(dst, src)
}
func (m *ExitResponse) XXX_Size() int {
	return xxx_messageInfo_ExitResponse.Size(m)
}
func (m *ExitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExitResponse proto.InternalMessageInfo

func (m *ExitResponse) GetExitstatus() ExitResponseExitStatus {
	if m != nil && m.Exitstatus != nil {
		return *m.Exitstatus
	}
	return ExitResponse_PERMITTED
}

type RegisterChatRoomRequest struct {
	// register chat room with username as admin
	ChatRoomName         *string  `protobuf:"bytes,1,req,name=chatRoomName" json:"chatRoomName,omitempty"`
	Username             *string  `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterChatRoomRequest) Reset()         { *m = RegisterChatRoomRequest{} }
func (m *RegisterChatRoomRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterChatRoomRequest) ProtoMessage()    {}
func (*RegisterChatRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{9}
}
func (m *RegisterChatRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterChatRoomRequest.Unmarshal(m, b)
}
func (m *RegisterChatRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterChatRoomRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterChatRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterChatRoomRequest.Merge(dst, src)
}
func (m *RegisterChatRoomRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterChatRoomRequest.Size(m)
}
func (m *RegisterChatRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterChatRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterChatRoomRequest proto.InternalMessageInfo

func (m *RegisterChatRoomRequest) GetChatRoomName() string {
	if m != nil && m.ChatRoomName != nil {
		return *m.ChatRoomName
	}
	return ""
}

func (m *RegisterChatRoomRequest) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type RegisterChatRoomResponse struct {
	RegStatus            *RegisterChatRoomResponseRegistrationStatus `protobuf:"varint,1,req,name=regStatus,enum=chat.RegisterChatRoomResponseRegistrationStatus" json:"regStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *RegisterChatRoomResponse) Reset()         { *m = RegisterChatRoomResponse{} }
func (m *RegisterChatRoomResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterChatRoomResponse) ProtoMessage()    {}
func (*RegisterChatRoomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_d887f2474eeba059, []int{10}
}
func (m *RegisterChatRoomResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterChatRoomResponse.Unmarshal(m, b)
}
func (m *RegisterChatRoomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterChatRoomResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterChatRoomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterChatRoomResponse.Merge(dst, src)
}
func (m *RegisterChatRoomResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterChatRoomResponse.Size(m)
}
func (m *RegisterChatRoomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterChatRoomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterChatRoomResponse proto.InternalMessageInfo

func (m *RegisterChatRoomResponse) GetRegStatus() RegisterChatRoomResponseRegistrationStatus {
	if m != nil && m.RegStatus != nil {
		return *m.RegStatus
	}
	return RegisterChatRoomResponse_OK
}

func init() {
	proto.RegisterType((*RegisterClient)(nil), "chat.RegisterClient")
	proto.RegisterType((*RegisterClientResponse)(nil), "chat.RegisterClientResponse")
	proto.RegisterType((*RoomUserEntity)(nil), "chat.RoomUserEntity")
	proto.RegisterType((*ChatMessage)(nil), "chat.ChatMessage")
	proto.RegisterType((*ChatMessageResponse)(nil), "chat.ChatMessageResponse")
	proto.RegisterType((*MessageUpdateReq)(nil), "chat.MessageUpdateReq")
	proto.RegisterType((*UpdateChatMessages)(nil), "chat.UpdateChatMessages")
	proto.RegisterType((*ExitRequest)(nil), "chat.ExitRequest")
	proto.RegisterType((*ExitResponse)(nil), "chat.ExitResponse")
	proto.RegisterType((*RegisterChatRoomRequest)(nil), "chat.RegisterChatRoomRequest")
	proto.RegisterType((*RegisterChatRoomResponse)(nil), "chat.RegisterChatRoomResponse")
	proto.RegisterEnum("chat.RegisterClientResponseAuthResponseStatus", RegisterClientResponseAuthResponseStatus_name, RegisterClientResponseAuthResponseStatus_value)
	proto.RegisterEnum("chat.ChatMessageResponseMessageStat", ChatMessageResponseMessageStat_name, ChatMessageResponseMessageStat_value)
	proto.RegisterEnum("chat.ExitResponseExitStatus", ExitResponseExitStatus_name, ExitResponseExitStatus_value)
	proto.RegisterEnum("chat.RegisterChatRoomResponseRegistrationStatus", RegisterChatRoomResponseRegistrationStatus_name, RegisterChatRoomResponseRegistrationStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	// register user
	RegisterRoom(ctx context.Context, in *RegisterClient, opts ...grpc.CallOption) (*RegisterClientResponse, error)
	// messaging
	SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessageResponse, error)
	// updating messages
	UpdateMessage(ctx context.Context, in *MessageUpdateReq, opts ...grpc.CallOption) (ChatService_UpdateMessageClient, error)
	// leaving
	ExitChat(ctx context.Context, in *ExitRequest, opts ...grpc.CallOption) (*ExitResponse, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) RegisterRoom(ctx context.Context, in *RegisterClient, opts ...grpc.CallOption) (*RegisterClientResponse, error) {
	out := new(RegisterClientResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/registerRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessageResponse, error) {
	out := new(ChatMessageResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) UpdateMessage(ctx context.Context, in *MessageUpdateReq, opts ...grpc.CallOption) (ChatService_UpdateMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatService_serviceDesc.Streams[0], "/chat.ChatService/updateMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatServiceUpdateMessageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatService_UpdateMessageClient interface {
	Recv() (*UpdateChatMessages, error)
	grpc.ClientStream
}

type chatServiceUpdateMessageClient struct {
	grpc.ClientStream
}

func (x *chatServiceUpdateMessageClient) Recv() (*UpdateChatMessages, error) {
	m := new(UpdateChatMessages)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatServiceClient) ExitChat(ctx context.Context, in *ExitRequest, opts ...grpc.CallOption) (*ExitResponse, error) {
	out := new(ExitResponse)
	err := c.cc.Invoke(ctx, "/chat.ChatService/exitChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	// register user
	RegisterRoom(context.Context, *RegisterClient) (*RegisterClientResponse, error)
	// messaging
	SendMessage(context.Context, *ChatMessage) (*ChatMessageResponse, error)
	// updating messages
	UpdateMessage(*MessageUpdateReq, ChatService_UpdateMessageServer) error
	// leaving
	ExitChat(context.Context, *ExitRequest) (*ExitResponse, error)
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_RegisterRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).RegisterRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/RegisterRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).RegisterRoom(ctx, req.(*RegisterClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendMessage(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_UpdateMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MessageUpdateReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServiceServer).UpdateMessage(m, &chatServiceUpdateMessageServer{stream})
}

type ChatService_UpdateMessageServer interface {
	Send(*UpdateChatMessages) error
	grpc.ServerStream
}

type chatServiceUpdateMessageServer struct {
	grpc.ServerStream
}

func (x *chatServiceUpdateMessageServer) Send(m *UpdateChatMessages) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatService_ExitChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).ExitChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.ChatService/ExitChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).ExitChat(ctx, req.(*ExitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerRoom",
			Handler:    _ChatService_RegisterRoom_Handler,
		},
		{
			MethodName: "sendMessage",
			Handler:    _ChatService_SendMessage_Handler,
		},
		{
			MethodName: "exitChat",
			Handler:    _ChatService_ExitChat_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "updateMessage",
			Handler:       _ChatService_UpdateMessage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_d887f2474eeba059) }

var fileDescriptor_chat_d887f2474eeba059 = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x9d, 0x92, 0x26, 0xe3, 0x24, 0x72, 0x97, 0x2a, 0x98, 0x08, 0x50, 0xb5, 0x12, 0x52,
	0x40, 0xc5, 0xd0, 0x5c, 0x11, 0x07, 0x48, 0x2c, 0x14, 0xd1, 0x36, 0xc8, 0x4e, 0x55, 0x38, 0xa1,
	0x55, 0x32, 0x4a, 0x2c, 0x35, 0x76, 0xba, 0xbb, 0x41, 0xed, 0x81, 0x2b, 0x7f, 0xc0, 0xd7, 0xf0,
	0x73, 0xc8, 0xde, 0xb5, 0xe3, 0xc4, 0x21, 0x37, 0xcf, 0xec, 0x9b, 0x37, 0x33, 0xcf, 0x6f, 0x00,
	0x26, 0x73, 0x26, 0xdd, 0x25, 0x8f, 0x65, 0x4c, 0x0e, 0x93, 0x6f, 0x3a, 0x80, 0x96, 0x8f, 0xb3,
	0x50, 0x48, 0xe4, 0xfd, 0xdb, 0x10, 0x23, 0x49, 0x3a, 0x50, 0x5b, 0x09, 0xe4, 0x11, 0x5b, 0xa0,
	0x63, 0x9c, 0x9a, 0xdd, 0xba, 0x9f, 0xc7, 0xa4, 0x0d, 0x55, 0x1e, 0xc7, 0x8b, 0xe1, 0xd4, 0x31,
	0xd3, 0x17, 0x1d, 0xd1, 0xbf, 0x06, 0xb4, 0x37, 0x69, 0x7c, 0x14, 0xcb, 0x38, 0x12, 0x48, 0x3e,
	0x43, 0x55, 0x48, 0x26, 0x57, 0x22, 0x25, 0x6b, 0xf5, 0xde, 0xba, 0xe9, 0x0c, 0xbb, 0xd1, 0x2e,
	0x5b, 0xc9, 0x79, 0x16, 0x04, 0x69, 0x99, 0xaf, 0xcb, 0xc9, 0x6b, 0x78, 0x94, 0xcc, 0x21, 0x1c,
	0xf3, 0xb4, 0xd2, 0xb5, 0x7a, 0x27, 0x9a, 0x27, 0x8e, 0x17, 0xd7, 0x02, 0xb9, 0x17, 0xc9, 0x50,
	0x3e, 0xf8, 0x0a, 0x42, 0xcf, 0x80, 0x94, 0x99, 0x48, 0x15, 0xcc, 0xd1, 0x17, 0xfb, 0x80, 0xb4,
	0x00, 0x06, 0xc3, 0xe0, 0xe3, 0xc5, 0xc5, 0xe8, 0xc6, 0x1b, 0xd8, 0x06, 0x3d, 0x83, 0xd6, 0x26,
	0xcd, 0x3e, 0x0d, 0xe8, 0x0d, 0x58, 0xfd, 0x39, 0x93, 0x97, 0x28, 0x04, 0x9b, 0xe1, 0x5e, 0xb9,
	0x1c, 0x38, 0x5a, 0xb2, 0x87, 0xdb, 0x98, 0x65, 0x7a, 0x65, 0x21, 0x21, 0x70, 0x28, 0xc3, 0x05,
	0x3a, 0x95, 0x34, 0x9d, 0x7e, 0x53, 0x09, 0x8f, 0x0b, 0xc4, 0xb9, 0x80, 0x1f, 0xb6, 0x04, 0x7c,
	0xa9, 0x16, 0xdf, 0x01, 0x75, 0x17, 0x2a, 0x4e, 0xd6, 0xcd, 0x64, 0xa3, 0x2f, 0xc0, 0x2a, 0xa4,
	0x73, 0x0d, 0x8e, 0xa0, 0xe2, 0xf9, 0xbe, 0x6d, 0x50, 0x17, 0x6c, 0x4d, 0x73, 0xbd, 0x9c, 0x32,
	0x89, 0x3e, 0xde, 0xed, 0x5d, 0xbf, 0x0f, 0x44, 0x01, 0x0b, 0x03, 0x08, 0xf2, 0x06, 0x6a, 0xba,
	0x8b, 0x1a, 0xd3, 0xea, 0x1d, 0x97, 0xc7, 0xcc, 0x21, 0xf4, 0x15, 0x58, 0xde, 0x7d, 0x28, 0x7d,
	0xbc, 0x5b, 0xa1, 0xd8, 0x6b, 0x39, 0xfa, 0x0b, 0x1a, 0x0a, 0x9a, 0xcb, 0x01, 0x78, 0x1f, 0xca,
	0x0d, 0x49, 0x9e, 0xab, 0x5e, 0x45, 0x9c, 0x9b, 0x80, 0xb4, 0x83, 0x0a, 0x05, 0xd4, 0x55, 0xe5,
	0xda, 0x11, 0x4d, 0xa8, 0x7f, 0xf5, 0xfc, 0xcb, 0xe1, 0x78, 0xec, 0x0d, 0xec, 0x03, 0x72, 0x0c,
	0xcd, 0xab, 0xd1, 0xf8, 0xc7, 0x3a, 0x65, 0xd0, 0xef, 0xf0, 0x24, 0xb7, 0xea, 0x9c, 0xc9, 0xc4,
	0x27, 0xd9, 0xd4, 0x14, 0x1a, 0x13, 0x9d, 0xba, 0x5a, 0x4f, 0xbe, 0x91, 0xdb, 0xd8, 0xcc, 0xdc,
	0xda, 0xec, 0x8f, 0x01, 0x4e, 0x99, 0x5b, 0xaf, 0x39, 0x82, 0x3a, 0xc7, 0x59, 0x50, 0xdc, 0xf2,
	0x7c, 0xeb, 0x72, 0xb6, 0x4a, 0x5c, 0x9e, 0x3e, 0x70, 0x26, 0xc3, 0x38, 0xd2, 0x9b, 0xaf, 0x39,
	0x68, 0x17, 0x48, 0x19, 0x90, 0xdb, 0x01, 0xa0, 0xea, 0x7d, 0x1b, 0x06, 0xe3, 0xc0, 0x36, 0x7a,
	0xbf, 0x4d, 0xe5, 0xf0, 0x00, 0xf9, 0xcf, 0x70, 0x82, 0xe4, 0x13, 0x34, 0xb8, 0xee, 0x99, 0xf4,
	0x23, 0x27, 0xbb, 0x2e, 0xb8, 0xf3, 0x6c, 0xdf, 0x5d, 0x93, 0xf7, 0x60, 0x09, 0x8c, 0xa6, 0xd9,
	0xd1, 0x94, 0xcd, 0xd1, 0x79, 0xfa, 0x5f, 0x5b, 0x93, 0x3e, 0x34, 0x57, 0xa9, 0xe5, 0xb2, 0xf2,
	0xb6, 0xc2, 0x6e, 0xfb, 0xb6, 0xe3, 0xa8, 0x7c, 0xd9, 0x9f, 0xef, 0x0c, 0x72, 0x0e, 0xb5, 0xe4,
	0xc7, 0x27, 0xd9, 0xac, 0x7d, 0xc1, 0x82, 0x1d, 0x52, 0xb6, 0xd0, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x25, 0xbc, 0xcd, 0x59, 0x2e, 0x05, 0x00, 0x00,
}
